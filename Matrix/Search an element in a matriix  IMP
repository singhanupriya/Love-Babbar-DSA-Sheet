https://leetcode.com/problems/search-a-2d-matrix/submissions/

Time: log(mn), Space:O(1)

class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        
        int m=matrix.size();
        int n=matrix[0].size();
        
        int start=0;
        int end=m*n-1;
        
        while(start<=end)
        {
            int mid=start+(end-start)/2;
            int element=matrix[mid/n][mid%n];
            
            if(element==target)
            {
                return true;
            }
            else if(target>element)
            {
                
                start=mid+1;
            }
            else
            {
                end=mid-1;
            }
            
        }
        
        return false;
        
    }
};


GFG:
https://www.geeksforgeeks.org/search-in-row-wise-and-column-wise-sorted-matrix/
Time: log(mn), Space:O(1)

int matSearch (vector <vector <int>> &mat, int N, int M, int X)
	{
	    // your code here
	    int i=0;
	    int j=M-1;
	    
	    while(i<N && j>=0)
	    {
	        int mid=mat[i][j];
	        
	        if(X==mid)
	        {
	            return 1;
	        }
	        else if(X>mid)
	        {
	            i++;
	        }
	        else
	        {
	            j--;
	        }
	    }
	    
	    return 0;
	    
	}
