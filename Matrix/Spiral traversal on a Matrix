https://practice.geeksforgeeks.org/problems/spirally-traversing-a-matrix-1587115621/1#

4 pointer, start of row, end of row, start of col, end of col, take edge cases


Time:O(rn), Space:O(rc)

public: 
    //Function to return a list of integers denoting spiral traversal of matrix.
    vector<int> spirallyTraverse(vector<vector<int> > matrix, int r, int c) 
    {
        // code here 
        
        vector<int> res;
        
        // four pointers
        
        int r1=0,r2=r-1,c1=0,c2=c-1;
        
        if(r==1 || c==1)
        {
            for(int i=0;i<r;i++)
            {
                for(int j=0;j<c;j++)
                {
                    res.push_back(matrix[i][j]);
                }
            }
            
            return res;
        }
        
        while(r1<=r2 && c1<=c2)
        {
            
            for(int x=c1;x<=c2;x++)
            {
                res.push_back(matrix[r1][x]);
            }
            
            for(int x=r1+1;x<=r2;x++)
            {
                res.push_back(matrix[x][c2]);
            }
            
            if(r1!=r2)
            {
                for(int x=c2-1;x>=c1;x--)
                {
                    res.push_back(matrix[r2][x]);
                }
            }
            
            if(c1!=c2)
            {
                for(int x=r2-1;x>r1;x--)
                {
                    res.push_back(matrix[x][c1]);
                }
            }
            
            
            
            r1++;r2--;c1++;c2--;
            
            
        }
        
        return res;
    }
};
