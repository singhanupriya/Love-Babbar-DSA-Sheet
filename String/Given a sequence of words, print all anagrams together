https://practice.geeksforgeeks.org/problems/print-anagrams-together/1

Time:O(N*SlogS), Space:O(NS)
Use unordered_map to store sorted string as index as actual strings as values

public:
    vector<vector<string> > Anagrams(vector<string>& string_list) {
        //code here
        
        unordered_map<string,vector<string>> m;
        
        int n=string_list.size();
        
        for(int i=0;i<n;i++)
        {
            string temp=string_list[i];
            sort(temp.begin(),temp.end());
            m[temp].push_back(string_list[i]);
        }
        
        vector<vector<string>> res;
        
        for(auto it:m)
        {
            res.push_back(it.second);
            
        }
        
        return res;
        
    }
    
    
    
    Optimised: https://leetcode.com/problems/group-anagrams/discuss/1398888/C%2B%2BPython-Group-by-sorted-string-group-by-count-characters-Solutions-Clean-and-Concise
