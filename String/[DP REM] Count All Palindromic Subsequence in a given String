https://practice.geeksforgeeks.org/problems/count-palindromic-subsequences/1#


Method 1: Recursion:


public:
    /*You are required to complete below method */
    
    long long int count(string str,int i,int j,vector<vector<long long int>>& dp)
    {
        if(i>j)
        {
            return 0;
        }
        
        if(dp[i][j]!=-1)
        {
            return dp[i][j];
        }
        
        if(i==j)
        {
            return dp[i][j]=1;
        }
        else if(str[i]==str[j])
        {
            return dp[i][j]=(count(str,i+1,j,dp) + count(str,i,j-1,dp)+1)% 1000000007;
        }
        else 
        {
            return dp[i][j]=(count(str,i+1,j,dp) + count(str,i,j-1,dp)- count(str,i+1,j-1,dp))% 1000000007;
        }
    }
    
    long long int  countPS(string str)
    {
       //Your code here
       int n=str.length();
       
       vector<vector<long long int>> dp(n,vector<long long int>(n,-1));
       
       return count(str,0,n-1,dp);
    }
     
