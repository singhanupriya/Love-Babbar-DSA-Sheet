https://www.geeksforgeeks.org/a-program-to-check-if-strings-are-rotations-of-each-other/


1. if l1!=l2 return false
2. push both strings in 2 queues.
3. Till l1, pop from q2 and push in q2 if at any point q1==q2 return true

Time:o(n+m), Space:O(N)

#include <iostream>
#include<vector>
#include<cstring>
#include<queue>

using namespace std;

bool solve(string s1, string s2)
{
    queue<int> q1;
    queue<int> q2;
    
    if(s1.length()!=s2.length())
    {
        return false;
    }
    
    for(int i=0;i<s1.length();i++)
    {
        q1.push(s1[i]);
    }
    
    for(int i=1;i<s2.length();i++)
    {
        q2.push(s2[i]);
    }
    
    int len=s1.length();
    
    while(len>0)
    {
        if(q1==q2)
        {
            return true;
        }
        
        char a=q2.front();
        q2.pop();
        q2.push(a);
        len--;
        
    }
    
    return true;
}

int main()
{
    string s1 = "ABCD";
    string s2 = "CDAB";
    cout<<solve(s1,s2);

    return 0;
}
