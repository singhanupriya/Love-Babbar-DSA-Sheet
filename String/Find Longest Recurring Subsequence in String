https://practice.geeksforgeeks.org/problems/longest-repeating-subsequence2004/1#


Mthod 1:

  int lcs(string s1,string s2, int n, int m)
	    {
	        if(n==0 || m==0)
	        {
	            return 0;
	        }
	        
	        if(s1[n-1]==s2[m-1] && n-1!=m-1)
	        {
	            return 1+lcs(s1,s2,n-1,m-1);
	        }
	        else
	        {
	            return max(lcs(s1,s2,n-1,m),lcs(s1,s2,n,m-1));
	        }
	        
	    }
	
		int LongestRepeatingSubsequence(string str){
		    // Code here
		    
		    int n=str.length();
		    return lcs(str,str,n,n);
		}
		
		
Method 2:		

Time:O(N^2), Space:O(N^2)


public:
	    int max(int a,int b)
	    {
	        if(a>=b)
	        {
	            return a;
	        }
	        return b;
	    }
	    
		int LongestRepeatingSubsequence(string str){
		    // Code here
		    
		    int n=str.length();
		    
		    vector<vector<int>> dp(n+1,vector<int>(n+1,0));
		    
		    for(int i=1;i<=n;i++)
		    {
		        for(int j=1;j<=n;j++)
		        {
		            if(str[i-1]==str[j-1] && i!=j)
		            {
		                dp[i][j]=1+dp[i-1][j-1];
		            }
		            else
		            {
		                dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
		            }
		        }
		    }
		    
		    return dp[n][n];
		    
		}
