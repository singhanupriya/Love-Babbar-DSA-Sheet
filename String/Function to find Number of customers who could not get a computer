https://www.geeksforgeeks.org/function-to-find-number-of-customers-who-could-not-get-a-computer/

Time:O(N), Space:O(26)

U need a DS to track who came and left with no of comps available and allows popping from any index with min complexity, use unordered_set as each char occurs max twice.  
If size(set)<comp_count and char not in set, then add t; 
if char already in set remove it; 
if size(set)==comp_count and char not in set, he cant use comp, incr ans


/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <iostream>
#include<unordered_set>

using namespace std;

int comp(int t,string str)
{
    unordered_set<char> s;
    
    int count=0;
    string left="";
    
    for(int i=0;i<str.length();i++)
    {
        if(s.size()<t && s.find(str[i])==s.end())
        {
            s.insert(str[i]);
        }
        else if(s.find(str[i])!=s.end())
        {
            s.erase(str[i]);
        }
        else if(s.size()==t && s.find(str[i])==s.end())
        {
            count++;
            left=left+str[i];
        }
    }
    
    if(count>0)
    {
        cout<<left<<"\n";
    }
    else
    {
        cout<<"No user without computer\n";
    }
    
    //People who dont use computer will be counted twice coming ang going to final ans/2
    return (count/2);
    
    
}



int main()
{
    int t=1;
    string str="ABCBCA";
    cout<<comp(t,str);

    return 0;
}
