https://practice.geeksforgeeks.org/problems/left-view-of-binary-tree/1#

Time:O(N), Space:O(H)

vector<int> leftView(Node *root)
{
   // Your code here
   unordered_map<int,int> m;
   queue<Node*> q;
   vector<int> res;
   
   if(root==NULL)
   {
       return res;
   }
   
   q.push(root);
   int level=0;
   
   while(!q.empty())
   {
       int l=q.size();
       for(int i=0;i<l;i++)
       {
           Node* curr=q.front();
           q.pop();
           
           if(m.find(level)==m.end())
           {
               m[level]=curr->data;
               res.push_back(curr->data);
               
           }
           if(curr->left)
           {
               q.push(curr->left);
           }
           if(curr->right)
           {
               q.push(curr->right);
           }
       }
       level++;
   }
   
   return res;
}
