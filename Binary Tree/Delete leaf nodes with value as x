https://www.geeksforgeeks.org/delete-leaf-nodes-value-x/

1. Check left and right subtree if they are leaf and root->data==target delete, now come to root if leaf and root->data==target delete

Time:O(N), Space:O(H)

#include <iostream>

using namespace std;

class Node{
    
    public:
    int data;
    Node* left;
    Node* right;
    
    Node(int x)
    {
        data=x;
        left=nullptr;
        right=nullptr;
    }
    
};

bool isLeaf(Node* root)
{
    if(!root->left && !root->right)
    {
        return true;
    }
    
    return false;
}

Node* solve(Node* root, int target)
{
    if(!root)
    {
        return nullptr;
    }
    
    root->left=solve(root->left,target);
    root->right=solve(root->right,target);
    
    
    if(root->data ==target)
    {
        Node* left=root->left;
        Node* right=root->right;
        
        if(isLeaf(root))
        {
            Node* temp=root;
            delete(temp);
            return nullptr;
        }
        
    }
    
    
    
    return root;
    
    
}

void inorder(Node* root)
{
    if(root)
    {
        inorder(root->left);
        cout<<root->data<<" ";
        inorder(root->right);
    }
}

int main()
{
    Node* root = new Node(10);
    root->left = new Node(3);
    root->right = new Node(10);
    root->left->left = new Node(3);
    root->left->right = new Node(1);
    root->right->right = new Node(3);
    root->right->right->left = new Node(3);
    root->right->right->right = new Node(3);
    
    inorder(root);
    cout<<endl;
    Node* curr=solve(root,3);
    cout<<endl;
    inorder(curr);

    return 0;
}
