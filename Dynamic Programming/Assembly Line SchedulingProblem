

We can find the min time to reach one station->value in dp table (option from line 1 and line 2)

Traverse thru the stations and find the min value dp[2][n]

Time:O(N), Space:O(N)

/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <iostream>
#include<vector>

using namespace std;

int solve(vector<vector<int>> a, vector<vector<int>> t, vector<int> e, vector<int> x, int n)
{
    vector<vector<int>> dp(2, vector<int>(n,0));
    
    dp[0][0]=e[0]+a[0][0];
    dp[1][0]=e[1]+a[1][0];
    
    for(int i=1;i<n;i++)
    {
        dp[0][i]=min(dp[0][i-1]+a[0][i], dp[1][i-1]+a[0][i]+t[1][i]);
        dp[1][i]=min(dp[1][i-1]+a[1][i],dp[0][i-1]+a[1][i]+t[0][i]);
    }
    
    return min(dp[0][n-1]+x[0],dp[1][n-1]+x[1]);
}

int main()
{
    vector<vector<int>> a = {{4, 5, 3, 2}, 
                            {2, 10, 1, 4}}; 
    vector<vector<int>> t = {{0, 7, 4, 5}, 
                            {0, 9, 2, 8}}; 
    vector<int> e = {10, 12};
    vector<int> x = {18, 7}; 
    
    cout<<solve(a,t,e,x,4);

    return 0;
}

Mthod 2- we only need the value of prev stations so no need to using any space, use variables to store

/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <iostream>
#include<vector>

using namespace std;

int solve(vector<vector<int>> a, vector<vector<int>> t, vector<int> e, vector<int> x, int n)
{
    vector<vector<int>> dp(2, vector<int>(n,0));
    
    int first=e[0]+a[0][0];  //time to reach station 1 line 1
    int second=e[1]+a[1][0]; //time to reach station 1 line 2
    
    for(int i=1;i<n;i++)
    {
        int up=min(first+a[0][i], second+a[0][i]+t[1][i]);  //time to reach upper station
        int down=min(second+a[1][i],first+a[1][i]+t[0][i]);  //time to reach lower station
        
        first=up;  //for next iteration up becomes first
        second=down;   //fior next iteration down becomes second
    }
    
    return min(first+x[0],second+x[1]);
}

int main()
{
    vector<vector<int>> a = {{4, 5, 3, 2}, 
                            {2, 10, 1, 4}}; 
    vector<vector<int>> t = {{0, 7, 4, 5}, 
                            {0, 9, 2, 8}}; 
    vector<int> e = {10, 12};
    vector<int> x = {18, 7}; 
    
    cout<<solve(a,t,e,x,4);

    return 0;
}
