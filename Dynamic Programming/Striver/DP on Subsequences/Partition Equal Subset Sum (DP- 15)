https://takeuforward.org/data-structure/partition-equal-subset-sum-dp-15/

Time:O(M*N), Space:O(M*N)

bool canPartition(vector<int>& nums) {
        
        int n=nums.size();
        
        int sum=0;
        
        for(int i=0;i<n;i++)
        {
            sum+=nums[i];
        }
        
        if(sum%2!=0)
        {
            return false;
        }
        
        sum=sum/2;
        
        
        vector<vector<bool>> dp(n+1,vector<bool>(sum+1,false));
        
        for(int i=0;i<=n;i++)
        {
            for(int j=0;j<=sum;j++)
            {
                if(j==0)
                {
                    dp[i][j]=true;
                    continue;
                }
                
                int take=0,notTake=0;
                
                if(i>0)
                {
                    notTake=dp[i-1][j];
                }
                
                
                if(i>0 && nums[i-1]<=j)
                {
                    take=dp[i-1][j-nums[i-1]];
                }
                
                dp[i][j]=take || notTake;
                
            }
        }
        
        return dp[n][sum];
        
        
    }
