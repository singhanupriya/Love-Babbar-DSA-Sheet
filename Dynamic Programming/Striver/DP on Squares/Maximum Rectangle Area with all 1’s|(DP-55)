https://www.youtube.com/watch?v=tOylVCugy9k

1. Extension of max area in a histogram.
2. Take each row as a histogram and find areas for each histograms/rows and return max

Time:O(R *(C+R))
Space:O(C)


 int max(int a, int b)
    {
        if(a>=b)
        {
            return a;
        }
        return b;
    }
    
    int maxAreaHistogram(vector<int>& heights)
    {
        int n=heights.size();
        
        vector<int> leftSmaller(n,-1);
        vector<int> rightSmaller(n,-1);
        
        stack<int> s;
        
        for(int i=0;i<n;i++)
        {
            if(s.empty())
            {
                leftSmaller[i]=0;
            }
            else
            {
                while(!s.empty() && heights[s.top()]>=heights[i])
                {
                    s.pop();
                }
                
                if(s.empty())
                {
                    leftSmaller[i]=0;
                }
                else
                {
                    leftSmaller[i]=s.top()+1;
                }
            }
            
            s.push(i);
        }
        
        
        while(!s.empty())
        {
            s.pop();
        }
        
        for(int i=n-1;i>=0;i--)
        {
            if(s.empty())
            {
                rightSmaller[i]=n-1;
            }
            else
            {
                while(!s.empty() && heights[s.top()]>=heights[i])
                {
                    s.pop();
                }
                
                if(s.empty())
                {
                    rightSmaller[i]=n-1;
                }
                else
                {
                    rightSmaller[i]=s.top()-1;
                }
            }
            
            s.push(i);
            
            
            
        }
        
        
        int ans=0;
        
        for(int i=0;i<n;i++)
        {
            ans=max(ans,(rightSmaller[i]-leftSmaller[i]+1)*heights[i]);
        }
        
        return ans;
        
        
    }
    
    
    int maximalRectangle(vector<vector<char>>& matrix) {
        
        int rows=matrix.size();
        int cols=matrix[0].size();
        
        vector<int> heights(cols,0);
        int ans=0;
        
        for(int i=0;i<rows;i++)
        {
            for(int j=0;j<cols;j++)
            {
                if(matrix[i][j]=='1')
                {
                    heights[j]++;
                }
                else
                {
                    heights[j]=0;
                }
            }
            
            ans=max(ans,maxAreaHistogram(heights));
            
            
        }
        
        return ans;
        
        
    }
