

Memoisation:

Time:O(N), Space:O(N)

public:
	
	    int solve(int n, vector<int>& dp)
	    {
	        if(n<0)
	        {
	            return 0;
	        }
	        
	        if(n==0)
	        {
	            return 1;
	        }
	        
	        if(dp[n]!=-1)
	        {
	            return dp[n];
	        }
	        
	        return dp[n]=(solve(n-1,dp)%1000000007 + solve(n-2,dp)%1000000007)%1000000007;
	    }
	
		int nthPoint(int n){
		    // Code here
		    
		    vector<int> dp(n+1,-1);
		    return solve(n,dp);
		}
};

MEthod 2: Tabulation

Time:o(n), space:o(n)

	int nthPoint(int n){
		    // Code here
		    
		    vector<int> dp(n+1,-1);
		    dp[0]=1;
		    
		    for(int i=1;i<=n;i++)
		    {
		        int one=0,two=0;
		        
		        if(i-1>=0)
		        {
		            one=dp[i-1]%1000000007;
		        }
		        if(i-2>=0)
		        {
		            two=dp[i-2]%1000000007;
		        }
		        
		        dp[i]=(one + two)%1000000007;
		    }
		    
		    return dp[n];
		}
    
    method 3- fibonnaci
    
    Time:O(N), Space:O(1)
    
    	int nthPoint(int n){
		    // Code here
		    
		    if(n<=1)
		    {
		        return 1;
		    }
		    
		    int a=1;
		    int b=1;
		    int c;
		    
		    for(int i=2;i<=n;i++)
		    {
		        c=(a%1000000007+b%1000000007)%1000000007;
		        a=b%1000000007;
		        b=c;
		        
		    }
		    
		    return c;
		    
		}
