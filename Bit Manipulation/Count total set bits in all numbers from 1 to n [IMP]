https://www.youtube.com/watch?v=g6OxU-hRGtY&t=434s


1. Find largest power of 2 and then use the formula.

M1- Recursive

Time:O(log n), Space:O(N)

 int largestPowerOfTwo(int n)
    {
        int x=0;
        
        while((1 << x) <= n)
        {
            x++;
        }
        
        return x-1;
    }
    
    int countSetBits(int n)
    {
        // Your logic here
        if(n<=1)
        {
            return n;
        }
        
        int x=largestPowerOfTwo(n);
        
        return (x*pow(2,x-1))+(n-pow(2,x)+1)+countSetBits(n-pow(2,x));
        
        
    }
    
M2- Iterative

Time:O(log n), Space:O(1)

 int largestPowerOfTwo(int n)
    {
        int x=0;
        
        while((1 << x) <= n)
        {
            x++;
        }
        
        return x-1;
    }
    
    int countSetBits(int n)
    {
        // Your logic here
        int ans=0;
        while(n>0)
        {
            int x=largestPowerOfTwo(n);
            ans=ans + (x*pow(2,x-1)) + (n-pow(2,x)+1);
            n=n-pow(2,x);
        }
        return ans;
        
        
    }
