https://www.geeksforgeeks.org/interleave-first-half-queue-second-half/

1. We need fist half of queue in rev is stack so that we can push 1 from stack and one from queue.
2. Push 1st half of q to s.
3. Push s to q.
4. Push 1st half of q to its end
4. Push half of q to s.
45. Pick one element from s and one from q, unless empty

Time:O(N), Space:O(N)


#include<iostream>
#include<stack>
#include<queue>

using namespace std;



// Function to interleave the queue
void interLeaveQueue(queue<int>& q)
{
    stack<int> s;
    int n=q.size();
    
    int i=0;
    while(i<(n/2))
    {
        s.push(q.front());
        q.pop();
        i++;
    }
    
    while(!s.empty())
    {
        q.push(s.top());
        s.pop();
    }
    
    i=0;
    while(i<(n/2))
    {
        q.push(q.front());
        q.pop();
        i++;
    }
    
    i=0;
    
    while(i<(n/2))
    {
        s.push(q.front());
        q.pop();
        i++;
    }
    queue<int> ans;
    
    while(!s.empty() && !q.empty())
    {
        ans.push(s.top());
        s.pop();
        ans.push(q.front());
        q.pop();
    }
    
    q=ans;
}
	

// Driver program to test above function
int main()
{
	queue<int> q;
	q.push(11);
	q.push(12);
	q.push(13);
	q.push(14);
	q.push(15);
	q.push(16);
	q.push(17);
	q.push(18);
	q.push(19);
	q.push(20);
	interLeaveQueue(q);
	int length = q.size();
	for (int i = 0; i < length; i++) {
		cout << q.front() << " ";
		q.pop();
	}
	return 0;
}

