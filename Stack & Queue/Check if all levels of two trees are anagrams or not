https://practice.geeksforgeeks.org/problems/check-if-all-levels-of-two-trees-are-anagrams-or-not/1

Time:O(NlogN), Space:O(N)


bool areAnagrams(Node *root1, Node *root2)
    {
        
        if(!root1 && !root2)
        {
            return true;
        }
        
        if((!root1 && root2) || (root1 && !root2) || (root1->data!=root2->data))
        {
            return false;
        }
        
        queue<Node*> q1;
        queue<Node*> q2;
        
        q1.push(root1);
        q2.push(root2);
        
        //if any one q becomes empty while other is not, return false
        
        while(!q1.empty() && !q2.empty())
        {
            int len1=q1.size();
            int len2=q2.size();
            
            if(len1!=len2)
            {
                return false;
            }
            
            string temp1="";
            string temp2="";
            
            for(int i=0;i<len1;i++)
            {
                Node* curr1=q1.front();
                q1.pop();
                Node* curr2=q2.front();
                q2.pop();
                temp1+=to_string(curr1->data);
                temp2+=to_string(curr2->data);
                
                if(curr1->left)
                {
                    q1.push(curr1->left);
                }
                if(curr1->right)
                {
                    q1.push(curr1->right);
                }
                if(curr2->left)
                {
                    q2.push(curr2->left);
                }
                if(curr2->right)
                {
                    q2.push(curr2->right);
                }
            }
            
            sort(temp1.begin(),temp1.end());
            sort(temp2.begin(),temp2.end());
            
            if(temp1!=temp2)
            {
                return false;
            }
        }
        
        if(q1.empty() && q2.empty())
        {
            return true;
        }
        
        return false;
        
    
    
    
    }
