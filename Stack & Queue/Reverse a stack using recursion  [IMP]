https://www.geeksforgeeks.org/reverse-a-stack-using-recursion/

1. Recursively pop all elements of stack, this will form a fn rec stack.
2. Now take elements from this rec fn stack and insert at bottom of origanl stack

Time:O(N^2)worst, Time:O(N) 


#include<iostream>
#include<stack>

using namespace std;

void insert_bottom(stack<int>& s,int a)
{
    if(s.empty())
    {
        s.push(a);
    }
    else
    {
        int c=s.top();
        s.pop();
        insert_bottom(s,a);
        s.push(c);
    }
}

void reverse(stack<int>& s)
{
    if(s.empty())
    {
        return;
    }
    else
    {
        int a=s.top();
        s.pop();
        reverse(s);
        insert_bottom(s,a);
    }
}

int main()
{
    stack<int> s;
    s.push(1);
    s.push(2);
    s.push(3);
    s.push(4);
    
    cout<<s.top()<<"\n";
    
    //stack: (top) 4 3 2 1
    reverse(s);
    
    cout<<s.top()<<" ";
    s.pop();
    cout<<s.top()<<" ";
    s.pop();
    cout<<s.top()<<" ";
    s.pop();
    cout<<s.top()<<" ";
    s.pop();
    
    return 0;
}

