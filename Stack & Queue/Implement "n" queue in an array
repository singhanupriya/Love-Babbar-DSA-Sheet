https://www.youtube.com/watch?v=_gJ3to4RyeQ

Question 7 in video love babbar


class NQueue{
public:
    
    int N;
    int S;
    int freeSpot;
    int* front;
    int* rear;
    int* arr;
    int* next;
    
    
    // Initialize your data structure.
    NQueue(int n, int s){
        // Write your code here.
        
        N=n;
        S=s;
        freeSpot=0;
        
        front=new int[n];
        for(int i=0;i<n;i++)
        {
            front[i]=-1;
        }
        
        rear=new int[n];
        for(int i=0;i<n;i++)
        {
            rear[i]=-1;
        }
        
        arr=new int[S];
        
        next=new int[S];
        for(int i=0;i<S-1;i++)
        {
            next[i]=i+1;
        }
        next[S-1]=-1;
        
    }

    // Enqueues 'X' into the Mth queue. Returns true if it gets pushed into the queue, and false otherwise.
    bool enqueue(int x, int m){
        // Write your code here.
        
        if(freeSpot==-1)
        {
            return false;
        }
        
        int index=freeSpot;
        freeSpot=next[index];
        
        if(front[m-1]==-1)
        {
            front[m-1]=index;
        }
        else
        {
            //link curr element with prev element
            next[rear[m-1]]=index;
        }
        //no free slot as we will be inserting value here
        next[index]=-1;
        
        rear[m-1]=index;
        arr[index]=x;
        
        return true;
        
    }

    // Dequeues top element from Mth queue. Returns -1 if the queue is empty, otherwise returns the popped element.
    int dequeue(int m){
        // Write your code here.
        
        if(front[m-1]==-1)
        {
            return -1;
        }
        
        int index=front[m-1];
        
        front[m-1]=next[index];
        
        //update free slot
        next[index]=freeSpot;;
        
        freeSpot=index;
        
        return arr[index];
        
        
    }
};
