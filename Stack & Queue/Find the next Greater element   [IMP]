https://practice.geeksforgeeks.org/problems/next-larger-element-1587115620/1
https://www.youtube.com/watch?v=NXOOYYwpbg4


Brute force: use two loops i->0 to n-1 and j->i+1 to n-1, as j is dependent on i, we can use stack
1. We need to compare ith element to (i+1), (i+2) and so on, so i+1 should be on top of stack, we need to push element in stack from end of array
2. If stack ->empty, return -1
3. Else
    if s.top()>arr[i], return that
    else pop till u get top>arr or stack is empty, if empy->-1 else top
 Note->when u are popping an element means there is some element on left which is greater than it, so it will never be an ans for any elements on its left
 
 Time:O(N), Space:O(1)

public:
    //Function to find the next greater element for each element of the array.
    vector<long long> nextLargerElement(vector<long long> arr, int n){
        // Your code here
        vector<long long> res;
        stack<long long> s;
        
        for(int i=n-1;i>=0;i--)
        {
            if(s.empty())
            {
                res.push_back(-1);
            }
            else
            {
                if(s.top()>arr[i])
                {
                    res.push_back(s.top());
                }
                else
                {
                    while(!s.empty() && s.top()<=arr[i])
                    {
                        s.pop();
                    }
                    
                    if(s.empty())
                    {
                        res.push_back(-1);
                    }
                    else
                    {
                        res.push_back(s.top());
                    }
                }
            }
            s.push(arr[i]);
        }
        
        reverse(res.begin(),res.end());
        return res;
    }
};
