https://leetcode.com/problems/best-time-to-buy-and-sell-stock/submissions/


Naive: Time:O(N^2), Space:O(1)


Time: O(N), Space:O(1)

class Solution {
public:
    int max(int a,int b)
    {
        if(a>=b)
        {
            return a;
        }
        return b;
    }
    
    int maxProfit(vector<int>& prices) {
        
        int buying_price=INT_MAX;
        
        int profit =0;
        int days=prices.size();
        
        for(int i=0;i<days-1;i++)
        {
            if(prices[i]<buying_price)
            {
                buying_price=prices[i];
            }
            profit=max(profit,prices[i+1]-buying_price);
        }
        
        return profit;
        
    }
};
