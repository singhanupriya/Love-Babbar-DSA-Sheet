https://www.geeksforgeeks.org/rearrange-array-alternating-positive-negative-items-o1-extra-space/

Time: O(N^2), Space: O(1)

/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <iostream>

using namespace std;

//Ref: https://www.youtube.com/watch?v=5MeI5Kk8KTQ
//the only method to maintain order is to not swap but rotate the std::array


void rotate(int arr[], int outIndex, int index)
{
    int temp=arr[index];
    for(int i=index;i>outIndex;i--)
    {
        arr[i]=arr[i-1];
    }
    arr[outIndex]=temp;
    
}

void arrange(int arr[], int n)
{
    int outIndex=-1;
    for(int i=0;i<n;i++)
    {
        if(((i%2==0)&&(arr[i]>=0)) || ((i%2!=0)&&(arr[i]<0)) )
        //if neg no at odd index or pos no at even index, that index is out of place
        
        {
            outIndex=i;
            {
                for(int j=outIndex+1;j<n;j++)
                {
                    if((arr[outIndex]>=0 && arr[j]<0) || (arr[outIndex]<0 && arr[j]>=0))
                    //find the next index which has the number of opp sign and rotate the array
                    {
                        rotate(arr,outIndex,j);
                        break;
                    }
                }
            }
        }
    }
    
    for(int i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }
}

int main()
{
    int arr[]={-5, -2, 5, 2, 4, 7, 1, 8, 0, -8};
    arrange(arr,10);

    return 0;
}
