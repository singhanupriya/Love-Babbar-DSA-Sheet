https://practice.geeksforgeeks.org/problems/maximum-product-subarray3604/1

Brute: Time: O(N^2), Space:O(1)
Time:O(N), Space:O(1)

class Solution{
public:
    
    long long max(long long a,long long b, long long c)
    {
        if(a>=b && a>=c)
        {
            return a;
        }
        else if(b>=c && b>=a)
        {
            return b;
        }
        else
        {
            return c;
        }
    }
    
    long long min(long long a,long long b, long long c)
    {
        if(a<=b && a<=c)
        {
            return a;
        }
        else if(b<=c && b<=a)
        {
            return b;
        }
        else
        {
            return c;
        }
    }

	// Function to find maximum product subarray
	
	
	long long maxProduct(vector<int> arr, int n) {
	    // code here
	    
	    long long curr_min=arr[0];
	    long long curr_max=arr[0];
	    long long ans=arr[0];
	    
	    for(int i=1;i<n;i++)
	    {
	        long long next_min=min(arr[i],arr[i]*curr_min,arr[i]*curr_max);
	        long long next_max=max(arr[i],arr[i]*curr_min,arr[i]*curr_max);
	        
	        curr_min=next_min;
	        curr_max=next_max;
	        
	        if(ans<curr_max)
	        {
	            ans=curr_max;
	        }
	    }
	    
	    return ans;
	    
	}
};
