https://practice.geeksforgeeks.org/problems/minimize-the-heights3351/1#

Time: O(nlogn), Space:O(N)



class Solution {
  public:
    int getMinDiff(int arr[], int n, int k) {
        
        
        vector<pair<int,int>> v;
        
        for(int i=0;i<n;i++)
        {
            v.push_back(make_pair(arr[i]+k,i));
            if(arr[i]>=k)
            {
                v.push_back(make_pair(arr[i]-k,i));
            }
        }
        
        sort(v.begin(),v.end());
        vector<int> vis(n,0);
        
        int element=0,ans=INT_MAX,i=0,j=0;
        
        int size=v.size();
        
        while(j<size)
        {
            if(vis[v[j].second]==0)
            {
                element++;
            }
            vis[v[j].second]++;
            
            while(element==n)
            {
                if(ans>(v[j].first-v[i].first))
                {
                    ans=v[j].first-v[i].first;
                }
                
                //mve i ahead and check if the element count is still n
                
                vis[v[i].second]--;
                if(vis[v[i].second]==0)
                {
                    element--;
                }
                i++;
                
                
            }
            
            j++;
            
            
            
        }
        
        
        return ans;
        
        
        
    }
};
