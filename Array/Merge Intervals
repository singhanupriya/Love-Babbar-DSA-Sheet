https://leetcode.com/problems/merge-intervals/submissions/
https://www.geeksforgeeks.org/merging-intervals/


Time:O(nlogn),Space:O(N)

class Solution {
public:
    int max(int a,int b)
    {
        if(a>=b)
        {
            return a;
        }
        return b;
    }
    
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        
        vector<vector<int>> res;
        int n=intervals.size();
        
        if(n==0)
        {
            return res;
        }
        
        sort(intervals.begin(),intervals.end());
        
        
        res.push_back(intervals[0]);
        
        for(int i=1;i<n;i++)
        {
            //access last element of vector
            //DONT DO THIS, THIS WILL ONLY MODIFY THE TOP VARIABLE BIT NOT ORGNAL VECTOR
            //vector<int> top=res.back();
            
            //if start of next > end of prev, no ovrlap
            if(res.back()[1]<intervals[i][0])
            {
                res.push_back(intervals[i]);
            }
            else
            {
                res.back()[1]=max(res.back()[1],intervals[i][1]);
            }
            
            
        }
        
        return res;
        
    }
};
