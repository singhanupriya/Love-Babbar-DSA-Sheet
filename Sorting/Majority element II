https://leetcode.com/problems/majority-element-ii/
https://www.youtube.com/watch?v=yDbkQd9t2ig

Time:O(N), Space:O(1)

in the array 2 1 1 

There can be max 2 elements with count > (n/3), here sequence of if matters, suppose element1=1 and u are at index =1 , arr[i]=1, even if count2=0, count1
value must be increased so first check if that element matches with any of the 2 elemenst

vector<int> majorityElement(vector<int>& nums) {
        
        vector<int> ans;
        
        
        int count1=0,count2=0,element1=-1,element2=-1;
        
        int n=nums.size();
        
        if(n==0)
        {
            return ans;
        }
        
        if(n==1)
        {
            ans.push_back(nums[0]);
            return ans;
        }
        
        for(int i=0;i<n;i++)
        {
            if(element1==nums[i])
            {
                count1++;
            }
            else if(element2==nums[i])
            {
                count2++;
            }
            else if(count1==0)
            {
                element1=nums[i];
                count1=1;
            }
            else if(count2==0)
            {
                element2=nums[i];
                count2=1;
            }
            
            else
            {
                count1--;
                count2--;
            }
                
        }
        
        count1=0;
        count2=0;
        
        for(int i=0;i<n;i++)
        {
            if(nums[i]==element1)
            {
                count1++;
            }
            else if(nums[i]==element2)
            {
                count2++;
            }
        }
        
        if(count1>(n/3))
        {
            ans.push_back(element1);
        }
        
        if(count2>(n/3))
        {
            ans.push_back(element2);
        }
        
        return ans;
        
        
        
    }
