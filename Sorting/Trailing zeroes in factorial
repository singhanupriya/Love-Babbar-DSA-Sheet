https://www.youtube.com/watch?v=fx8rUY_iIms
https://practice.geeksforgeeks.org/problems/trailing-zeroes-in-factorial5134/1#

1. If n is a very large number, the digit will overflow in long long also.
2. Time complexity will also be very high.
3. We know 0 will come if 10 is a factor , 10=2 x 5, means prime factors 2,5 should be there to make one 0.
4. Occ of 2 will be more > occ of 5, no of trailing 0s=occurence on 5 in its factors

Trailing 0s in n!= [n/5]+[n/5^2] + [n/5^3]... till it becomes 0

As long as n > power of 5, u will not get 0, hence, check till then.

Time:O(log[base 5] n) as n/5^k= time,

public:
    int trailingZeroes(int n)
    {
        // Write Your Code here
        
        if(n<0)
        {
            return -1;
        }
        
        int count=0;
        for(int i=5;n/i >=1;i=i*5)  // u will get 0 for all powers of 5 >n
        {
            count=count + (n/i);
        }
        
        return count;
    }
    
};
