https://www.geeksforgeeks.org/count-triplets-with-sum-smaller-that-a-given-value/

Brute force- 3 loops, Time:O(N^3), Space:O(1)

Mthod 2- arr[] of distinct integers of size N and a value sum, the task is to find the count of triplets (i, j, k), having (i<j<k) with the sum of (arr[i] + arr[j] + arr[k]) smaller than the given value sum.
1. Sort array
2. Iterate i from 0 to n-2 and use 2 pointer for rem array, l=i+1, h=n-1.
3. If u get curr_sum<target, means for all values of h less than current h will also give ans for same i,l.
  Eg - 1,3,4,5,7. arr[i]=1, arr[l]=3, arr[h]=7 <12, now keeping i and l fixed, we can get more possible h's for which this will hold true i.e. arr[h]=4,5,7 so count=count+(h-l), l++.
4. Else h--

Time:O(N^2), Space:O(1)


public:
	long long countTriplets(long long arr[], int n, long long sum)
	{
	    // Your code goes here
	    long long count=0;
	    
	    sort(arr,arr+n);
	    for(int i=0;i<n-2;i++)
	    {
	        int l=i+1,h=n-1;
	        
	        while(l<h) //strictly as we want three diff nos
	        {
	            if(arr[i]+arr[l]+arr[h]<sum)
	            {
	                //if for this value of h, u are getting <sum, all smaller values of k can also be ur third element
	                //no of possibilities of h here will be (h-l), with same i,l.
	                count+=(h-l);
	                l++;
	            }
	            else
	            {
	                h--;
	            }
	        }
	    }
	    
	    return count;
	}
		 

};
