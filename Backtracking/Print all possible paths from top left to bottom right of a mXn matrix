https://www.geeksforgeeks.org/print-all-possible-paths-from-top-left-to-bottom-right-of-a-mxn-matrix/


Time:O(2^(m*n)), total blocks-m*n, at every block 2 choices
Space:O(m*n), max rec space-all boxes covered

#include<iostream>
#include<vector>

using namespace std;


void path(vector<vector<int>> mat, int i, int j, int m, int n, int diri[],int dirj[],vector<int> temp,vector<vector<int>>& ans )
{
	if(i==m-1 && j==n-1)
	{
		temp.push_back(mat[i][j]);
		ans.push_back(temp);
		return;
	}
	for(int x=0;x<2;x++)
	{
		if(i+diri[x]>=0 && i+diri[x]<m && j+dirj[x]>=0 && j+dirj[x]<n)
		{
			temp.push_back(mat[i][j]);
			path(mat,i+diri[x],j+dirj[x],m,n,diri,dirj,temp,ans);
			temp.pop_back();
		}
	}
	
}




int main()
{
	
	vector<vector<int>> mat{ { 1, 2, 3 },
                              { 4, 5, 6 },
                              { 7, 8, 9 } };
	int diri[]={1,0};
	int dirj[]={0,1};
	int m=3;
	int n=3;
	
	vector<vector<int>> ans;
	vector<int> temp;
	
	path(mat,0,0,m,n,diri,dirj,temp,ans);
	for(int i=0;i<ans.size();i++)
	{
		for(int j=0;j<ans[i].size();j++)
		{
			cout<<ans[i][j]<<" ";
		}
		cout<<"\n";
	}
	
	
	return 0;
}
