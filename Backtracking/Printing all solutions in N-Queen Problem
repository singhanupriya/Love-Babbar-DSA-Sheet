
https://www.youtube.com/watch?v=i05Ju7AftcM
https://www.geeksforgeeks.org/printing-solutions-n-queen-problem/

Time:O(N^2), Space:O(N)

#include<iostream>
#include<vector>

using namespace std;

void queen(vector<vector<int>> mat, int col, int n, vector<int> temp,vector<vector<int>>& ans, vector<int> row_check, vector<int> lower_diagonal, vector<int> upper_diagonal )
{
	if(col>=n)
	{
		ans.push_back(temp);
		return;
	}
	
	for(int row=0;row<n;row++)
	{
		if(row_check[row]==0 && lower_diagonal[row+col]==0 && upper_diagonal[(n-1)+(row-col)]==0)
		{
			row_check[row]=1;
			lower_diagonal[row+col]=1;
			upper_diagonal[(n-1)+(row-col)]=1;
			mat[row][col]=1;
			temp.push_back(row+1);
			queen(mat,col+1,n,temp,ans,row_check,lower_diagonal, upper_diagonal );
			row_check[row]=0;
			lower_diagonal[row+col]=0;
			upper_diagonal[(n-1)+(row-col)]=0;
			mat[row][col]=0;
			temp.pop_back();
			
			
			
		}
	}
}

int main()
{
	int n=5;
	vector<vector<int>> mat(n,vector<int>(n,0));
	vector<vector<int>> ans;
	vector<int> temp;
	vector<int> row_check(n,0);
	vector<int> lower_diagonal(2*n-1,0);
	vector<int> upper_diagonal(2*n-1,0);
	
	queen(mat,0,n,temp,ans,row_check,lower_diagonal, upper_diagonal);
	
	for(int i=0;i<ans.size();i++)
	{
		for(int j=0;j<ans[i].size();j++)
		{
			cout<<ans[i][j]<<" ";
		}
		cout<<"\n";
	}
	
	
	return 0;
}
