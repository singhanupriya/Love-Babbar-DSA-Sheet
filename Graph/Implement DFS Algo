https://practice.geeksforgeeks.org/problems/depth-first-traversal-for-a-graph/1/#

1. Create a visisted vector to keep track of visisted vertices and use recursion

Time:O(V+E), Space:O(V)


void dfs(vector<int> adj[],vector<int>& vis, vector<int>& ans, int i)
    {
        vis[i]=1;
        ans.push_back(i);
        
        for(int j=0;j<adj[i].size();j++)
        {
            if(vis[adj[i][j]]==0)
            {
                dfs(adj,vis,ans,adj[i][j]);
            }
        }
    }
    
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        
        vector<int> vis(V,0);
        vector<int> ans;
        dfs(adj,vis,ans,0);
        return ans;
    }
};
