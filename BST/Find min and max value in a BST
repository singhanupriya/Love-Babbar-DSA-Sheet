https://practice.geeksforgeeks.org/problems/minimum-element-in-bst/1#

Time:O(N), Space:O(H)




Mthod 1-

void inorder(Node* root, int& minValue)
{
    if(root)
    {
        inorder(root->left,minValue);
        minValue=min(minValue,root->data);
        //maxValue=max(maxValue,root->data);
        inorder(root->right,minValue);
    }
}

int minValue(Node* root) {
    // Code here
    
    int minValue=INT_MAX;
    
    
    if(!root)
    {
        return -1;
    }
    
    inorder(root,minValue);
    return minValue;
}

Method 2-

Time:O(N), Space:O(N)

void inorder(Node* root,vector<int>& res)
{
    if(root)
    {
        inorder(root->left,res);
        res.push_back(root->data);
        inorder(root->right,res);
    }
}


int minValue(Node* root) {
    // Code here
    if(!root)
    {
        return -1;
    }
    
    
    vector<int> res;
    inorder(root,res);
    return res[0];
    
    
    
}

Iterative
Time:O(H), Space:O(H)

int minValue(Node* root) {
    // Code here
    
    if(!root)
    {
        return -1;
    }
    
    stack<Node*> s;
    s.push(root);
    
    Node* curr=root;
    
    
    
    while(!s.empty() || curr)
    {
        curr=curr->left;
        
        if(curr)
        {
            s.push(curr);
        }
        else
        {
            Node* temp=s.top();
            //return temp->data;
            
            
            s.pop();
            return temp->data;
            curr=curr->right;
        }
    }
    
    
}
