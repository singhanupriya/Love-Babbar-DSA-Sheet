https://practice.geeksforgeeks.org/problems/count-bst-nodes-that-lie-in-a-given-range/1#

Time:O(N), Space:O(H)

M1-

1. Just do inorder traversal, if in range count++

void inorder(Node* root, int l, int h, int& count)
    {
        if(root)
        {
            inorder(root->left,l,h,count);
            if(root->data>=l && root->data<=h)
            {
                count++;
            }
            inorder(root->right,l,h,count);
        }
    }

    int getCount(Node *root, int l, int h)
    {
      // your code goes here 
      int count=0;
      inorder(root,l,h,count);
      return count;
    }



M2

1. if l,h==root, return 1
2. if root>=l && root<=h, return 1+left+right
3. if root<l, return right
4. if root>h, return left


int getCount(Node *root, int l, int h)
{
  // your code goes here 
  if(!root)
  {
      return 0;
  }
  
  if(root->data ==l && root->data == h)
  {
      return 1;
  }
  
  if(root->data >= l && root->data <= h)
  {
      return 1+getCount(root->left,l,h)+ getCount(root->right,l,h);
  }
  else if(root->data < l)
  
  {
      return  getCount(root->right,l,h);
  }
  else if(root->data > h)
  {
      return getCount(root->left,l,h);
  }
}
