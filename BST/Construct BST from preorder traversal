https://www.geeksforgeeks.org/construct-bst-from-given-preorder-traversa/


Method 1:

Time:O(N), Space:O(N)

1. Create inorder and find index.

unordered_map<int,int> m;


 
/* A binary tree node has data, pointer to left child
and a pointer to right child */
class Node {
public:
    int val;
    Node* left;
    Node* right;
    
    Node(int data)
    {
        val=data;
        left=NULL;
        right=NULL;
    }
};
 
// A utility function to create a node

    Node* check(vector<int>& preorder,vector<int>& inorder,int& pre_start,int in_start,int in_end)
    {
        if(in_start > in_end)
        {
            
            return NULL;
        }
        
        Node* root=new Node(preorder[pre_start]);
        pre_start++;
        
        if(in_start<in_end)
        {
            int index=m[root->val];
            root->left=check(preorder,inorder,pre_start,in_start,index-1);
            root->right=check(preorder,inorder,pre_start,index+1,in_end);
        }
        
        return root;
    }
    
    Node* bstFromPreorder(vector<int>& preorder) {
        
        int n=preorder.size();
        vector<int> inorder(n);
        for(int i=0;i<preorder.size();i++)
        {
            inorder[i]=preorder[i];
            //cout<<inorder[i]<<" ";
        }
        
        
        
        sort(inorder.begin(),inorder.end());
        
        for(int i=0;i<inorder.size();i++)
        {
            m[inorder[i]]=i;
        }
        int pre_start=0;
        
        return check(preorder,inorder,pre_start,0,inorder.size()-1);
        
        //return;
            
        
    }
